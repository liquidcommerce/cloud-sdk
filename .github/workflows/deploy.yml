name: Deploy SDK

on:
  push:
    branches:
      - beta
      - main

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          clean: true

      - name: Set up Node.js and pnpm
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install pnpm
        run: |
          npm install -g pnpm@9.5.0
          pnpm install

      - name: Setup SSH Deploy Key
        env:
          CLOUD_DEPLOY_KEY: ${{ secrets.CLOUD_DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$CLOUD_DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa

      - name: Verify SSH key
        run: |
          ls -la ~/.ssh
          sha256sum ~/.ssh/id_rsa
          ssh-keygen -l -f ~/.ssh/id_rsa
          cat ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: ssh -T git@github.com || true

      - name: Configure Git
        run: |
          git config --global user.name "${{ secrets.CLOUD_USER_NAME }}"
          git config --global user.email "${{ secrets.CLOUD_USER_EMAIL }}"
          git config --global core.sshCommand "ssh -i ~/.ssh/id_rsa -o UserKnownHostsFile=~/.ssh/known_hosts"
          git remote set-url origin git@github.com:${GITHUB_REPOSITORY}.git

      - name: Lint and test
        run: pnpm lint

      - name: Build SDK
        run: pnpm build

      - name: Update package.json for NPM organization
        run: |
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            sed -i 's/"name": ".*"/"name": "@liquidcommerce\/cloud-sdk"/' package.json
          else
            sed -i 's/"name": ".*"/"name": "@liquidcommercedev\/cloud-sdk"/' package.json
          fi
          cat package.json

      - name: Set up NPM Token
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.CLOUD_SDK_NPM_TOKEN }}" > ~/.npmrc
          cat ~/.npmrc

      - name: Generate changelog
        env:
          NPM_TOKEN: ${{ secrets.CLOUD_SDK_NPM_TOKEN }}
        run: |
          pnpm changelog
          git add CHANGELOG.md
          git commit -m "chore: update changelog" || echo "No changes to commit"

      - name: Semantic Release
        env:
          GIT_AUTHOR_NAME: ${{ secrets.CLOUD_USER_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.CLOUD_USER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.CLOUD_USER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.CLOUD_USER_EMAIL }}
          NPM_TOKEN: ${{ secrets.CLOUD_SDK_NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add ~/.ssh/id_rsa
          GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=~/.ssh/known_hosts" pnpm semantic-release --debug

      - name: Upload UMD to GCP
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "${GCP_SA_KEY}" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gsutil cp umd/liquidcommerce-cloud-sdk.min.js \
          $(if [ "${GITHUB_REF}" == "refs/heads/main" ]; then echo "gs://liquid-commerse-assets/sdk/cloud/liquidcommerce-cloud-sdk.min.js"; else echo "gs://liquid-commerse-assets/sdk/cloud/stage/liquidcommerce-cloud-sdk.min.js"; fi)